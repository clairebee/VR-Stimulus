function EXP = LoadExpParameters(animalName)
%, RIGinfo)

% function to load the EXP information for animal 'animalName'
% Usage: EXP = LoadExpParameters(animalName, DIRname);
% 'animalName' is an optional parameter
% 'DIRname'    is the directory to look for the data in
% Follow up by [exp, exp_out] = SetExperimentParameters(exp);
% Aman Saleem (aman.saleem@gmail.com)
% November 2014

% if nargin<2
%      load('C:\BehaviourData\RIGinfo.m');
% end
if nargin<1
    animalName = inputdlg('Please enter the animal name:','s');
end

exp = BaseData;
%%
    function exp = BaseData
        %%
        exp.Meta = ...
            struct(...
            'AnimalName', 'test', ...
            'Species', 'C57BL6J', ...
            'SurgeryDate', '1 Jan 2015', ...
            'BaseWeight', '25g' ...
            );
        
        exp.StimFix = ...
            struct(...
            'maxTraj', 120, ...
            'pause_frames', 60*3, ...       %  ~2 secs pause between trials
            ... room related parameters that change on every trial
            'visibleDepth',     [150], ... % Generally ~ same distance in cm, check each distance (previously 500) *9.5/8
            ...
            'maxBadLicks', 15,...
            'punishLim', 6.5,...
            'PtoA', [0],...
            'rew_tol', 6.5, ...             % +/- extent of reward position
            ...
            'scaling', 1, ...
            'randScale', 0,...
            ...
            'changeLength', 1, ...
            'randLength', 0,...
            ...
            'randStart', 0, ...
            'startRegion', 0.01, ...
            ...
            'contrWalls', 1,...              % Change contrast on only textures (0) or on walls as well (1)
            'randContr', 0 ...
            ...
            );
        exp.StimFix.nTrialTypes = 9;
        
        exp.StimVar(1).name = 'contrast';
        exp.StimVar(1).variable = true;
        exp.StimVar(1).base = 0.6;
        exp.StimVar(1).trialVal = [1 1 1 0 1 1 0 1 1]; %ones(1, exp.StimFix.nTrialTypes);%[1 1 1  1 0 1 1 1 1 1 1 1];
        
        exp.StimVar(2).name = 'length';
        exp.StimVar(2).variable = false;
        exp.StimVar(2).base = 1;
        exp.StimVar(2).trialVal = ones(1, exp.StimFix.nTrialTypes);%[1  1   1    0.75 1   1   1  1    1.25 1 1 1];
        
        exp.StimVar(3).name = 'gain';
        exp.StimVar(3).variable = false;
        exp.StimVar(3).base = 1;
        exp.StimVar(3).trialVal = ones(1, exp.StimFix.nTrialTypes);%[1 0.7 0.7 1 1 1.3 1.3 1 1 1 1 1];
        
        exp.StimVar(4).name = 'active';
        exp.StimVar(4).variable = true;
        exp.StimVar(4).base = 1;
        exp.StimVar(4).trialVal = zeros(1, exp.StimFix.nTrialTypes);%[0  1   1    1    1   1   1  1    1    1 1 1];
        
        exp.StimVar(5).name = 'rew_pos';
        exp.StimVar(5).variable = true;
        exp.StimVar(5).base = 70;
        exp.StimVar(5).trialVal = ones(1, exp.StimFix.nTrialTypes);%[1  1   1    1    -1  1   1  1    1    1 1 1];
%         ...
%             struct(...
%             'contrLevels',  0.6*[1 1 1  1 0 1 1 1 1],...[1  1   0.3  1    0   1   1  1.2  1   ],...[1.25 1 1 0.75 1 1 0   1 1 1.25 0.75 1 1],...0.75*[1 1 1 1 0 1 1],...0.75*[1 1 1 1 1 1 1 0 1 1],...0.85*[1 1 1 1 1 0 0 0 1 1 1],...[1],...[1 1 1 1 0],...[1 1 1 1 1 0 1 1 1 0],...[1],...[1 1 1 0],... % List the levels of contrast to be used, contrast on any trial will be picked at random
%             'lengthSet',        [1],...%[1  1   1    0.75 1   1   1  1    1.25],...[1 0.75 1 1 1.25 1 1    1 0.75 1 1 1 1.25],...[1],...[1],...[1 1 1.2 1 1 1 1 1 1 0.8](range 0.1 to 2)
%             'scaleSet',         [1.0],...[1 0.7 0.7 1 1 1.3 1.3],...%[1  0.7 1    1    1   1.3 1  1    1   ],...[1],...[1 1 1.2 1 1 1 1 1 0.8 1],...[1],... (1: gives room size 1m, as room length is 100)
%             'active',           [0 0 0  1 1 1 1 1 1],...  %[0  1   1    1    1   1   1  1    1   ],... 1   1    1    1   1   1  1    1   ],...[0 1 0 1 1 0 1    0 1 1 1 0 1],...[0 1 0 1 1 1 0],...[0 0 0 1 0  1 0 1 1 0],...[0 ones(1,4) ones(1,5) 0 ones(1,4) 0 ones(1,4) 0 ones(1,4) 0*ones(1,5) ones(1,5) 0 ones(1,4) 0 ones(1,4) 0 ones(1,4) 0*ones(1,5) ones(1,5) 0 ones(1,4) 0 ones(1,4) 0 ones(1,4)],... 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1],...1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1],...                % 0: passive reward at centre, 1: active reward in region
%             'rew_pos',       90*[1 1 1  1 -1 1 1 1 1]...[1  1   1    1    -1  1   1  1    1   ],...[50*ones(1,30) 70*ones(1,30) 50*ones(1,30)], ... [50],...            % centre of reward position
%             );
        
        exp.Reward = ...
            struct(...
            ... reward related parameters
            'punishZone', 60,...
            ...
            ... 'rew_vis', 1, ...              % 1:rewards visual position, 0: rewards run position
            'maxNRewards', 2,...               % max number of rewards on a single base
            'rewardGap', 0.7, ...              % time in between two rewards on a single base
            'rewardDelay', 0.7, ...            % delay for the first reward
            ...
            'BASEvalveTime',3.0,...         % Reward for user , old ones
            'PASSvalveTime',3.5,...           % Reward for passive trial
            'ACTVvalveTime',3.5...           % Reward for active  trial
            );
        
        
        exp.Maze = ...
            struct(...
            'vh', 2,...    % -(h/2) + 'c3' is the viewing height
            'tw', 8, ...    % texture width
            'l', 100,...100.0, ...
            'b', 8, ...     %
            'h', 8, ...     %
            'tc1', 20,...20,...
            'tc2', 40,...40,...
            'tc3', 60,...60,...
            'tc4', 80,...80,...
            'delta', 0.05, ...
            'etw1', 0, ...
            'etw2', 0, ...
            ...
            'bidirec', 0, ...               % to go back and forth on the track
            'trajDir', 'cw'...               %  'cw' clockwise, 'ccw' counter clockwise
            );
        
        exp.Textures = ...
            struct(...
            'textureFile','textures_hf_new',...'textures_hf_MiK',...        % WHITENOISE, COSGRATING, GRAY
            ...
            'backgroundText','WHITENOISE',...
            ...
            'leftWallText', 'WHITENOISE2',...
            'rightWallText', 'WHITENOISE',...
            'floorText', 'WHITENOISE3',...
            'farWallText','GRAY',...
            'ceilingText', 'WHITENOISE4',...
            'nearWallText','GRAY',...
            ...
            'Leg1Text1', 'VCOSGRATING',...
            'Leg1Text2', 'VCOSGRATING',...
            'Leg1Text3', 'VCOSGRATING',...
            'Leg1Text4', 'VCOSGRATING',...
            ...
            'Leg2Text1', 'PLAIDS',...
            'Leg2Text2', 'PLAIDS',...
            'Leg2Text3', 'PLAIDS',...
            'Leg2Text4', 'PLAIDS',...
            ...
            'Leg3Text1', 'VCOSGRATING',...
            'Leg3Text2', 'VCOSGRATING',...
            'Leg3Text3', 'VCOSGRATING',...
            'Leg3Text4', 'VCOSGRATING',...
            ...
            'Leg4Text1', 'PLAIDS',...
            'Leg4Text2', 'PLAIDS',...
            'Leg4Text3', 'PLAIDS',...
            'Leg4Text4', 'PLAIDS',...
            ...
            'end_walls', 0,...                      % Do you want to have extra ends
            ...
            'End1Text1', 'GRAY',...'RED',...
            'End1Text2', 'GRAY',...'RED',...
            'End1Text3', 'GRAY',...'RED',...
            'End1Text4', 'GRAY',...'RED',...
            ...
            'End2Text1', 'GRAY',...'BLUE',...
            'End2Text2', 'GRAY',...'BLUE',...
            'End2Text3', 'GRAY',...'BLUE',...
            'End2Text4', 'GRAY'...'BLUE',...
            );
        
        exp.User = ...
            struct(...
            'username','aman'...
            );
        
        exp.RigInfo = ...
            struct(...
            'wheelType', 'WHEEL', ... % This can be either 'BALL', 'WHEEL', 'KEYBRD'
            'wheelRadius', 17.78/2, ...   % Mainly for the rotary encoder (WHEEL), which then uses it to get the units right
            'wheelToVR', 1.1, ...
            'soundOn', 0 ...
            ...
            );
        
    end

%%
% f = figure;
% t = uitable(f,'Data',data,'RowName', rownames,'ColumnName', colnames, 'ColumnEditable',[true],'Position', [20 20 200 260])
% get(t,data)
% get(t,'data')
% get(t,'ColumnName')
% get(t,'ColumnName')
% get(t,'RowName')
% exp
% clear all
Controller.figInfo.mainFig = figure('Name', 'Spike Analysis Controller',...
'Position', [10 300 675 520], ...
'MenuBar', 'none', ...
'ToolBar', 'none', ...
'NumberTitle', 'off');
% Tabs and save option
Controller.figInfo.main = uiextras.VBox('Parent',Controller.figInfo.mainFig,'Spacing',10,'Padding',5);
Controller.figInfo.metaData = uiextras.VBox('Parent',Controller.figInfo.main);
Controller.figInfo.tabs = uiextras.TabPanel('Parent',Controller.figInfo.main);
Controller.figInfo.saveButton = uicontrol('Parent',Controller.figInfo.main,'String','SAVE','fontsize',12,'Enable','on', 'Callback', @(~,~) Controller.saveData);
% The Tabs
%         Controller.figInfo.StimuliTab   = uiextras.VBox('Parent',Controller.figInfo.tabs,'Spacing',10,'Padding',5);
%         Controller.figInfo.RewardTab    = uiextras.VBox('Parent',Controller.figInfo.tabs,'Spacing',10,'Padding',5);
%         Controller.figInfo.MazeTab      = uiextras.VBox('Parent',Controller.figInfo.tabs,'Spacing',10,'Padding',5);
%         Controller.figInfo.TexturesTab  = uiextras.VBox('Parent',Controller.figInfo.tabs,'Spacing',10,'Padding',5);
%         Controller.figInfo.UserTab      = uiextras.VBox('Parent',Controller.figInfo.tabs,'Spacing',10,'Padding',5);
%         Controller.figInfo.RigInfoTab   = uiextras.VBox('Parent',Controller.figInfo.tabs,'Spacing',10,'Padding',5);
Controller.figInfo.main.Sizes = [-1 -5 -1];
nTabs = length(exp);
for iTab = 1:nTabs
switch iTab
case 1
%                     rownames = fieldnames(exp.Stimuli);
%                     data = struct2cell(exp.Stimuli);
%                     colnames = {'Value'};
%                     Controller.figInfo.StimuliInfo = uitable(...
%                         Controller.figInfo.tabs,...
%                         'Data',data,...
%                         'RowName', rownames,...
%                         'ColumnName', colnames, 'ColumnEditable',[true])
case 2
rownames = fieldnames(exp.Reward);
data = struct2cell(exp.Reward);
colnames = {'Value'};
Controller.figInfo.RewardInfo = uitable(...
Controller.figInfo.tabs,...
'Data',data,...
'RowName', rownames,...
'ColumnName', colnames, 'ColumnEditable',[true])
case 3
rownames = fieldnames(exp.Maze);
data = struct2cell(exp.Maze);
colnames = {'Value'};
Controller.figInfo.MazeInfo = uitable(...
Controller.figInfo.tabs,...
'Data',data,...
'RowName', rownames,...
'ColumnName', colnames, 'ColumnEditable',[true])
case 4
rownames = fieldnames(exp.Textures);
data = struct2cell(exp.Textures);
colnames = {'Value'};
Controller.figInfo.TexturesInfo = uitable(...
Controller.figInfo.tabs,...
'Data',data,...
'RowName', rownames,...
'ColumnName', colnames, 'ColumnEditable',[true])
case 5
rownames = fieldnames(exp.User);
data = struct2cell(exp.User);
colnames = {'Value'};
Controller.figInfo.UserInfo = uitable(...
Controller.figInfo.tabs,...
'Data',data,...
'RowName', rownames,...
'ColumnName', colnames, 'ColumnEditable',[true])
case 6
rownames = fieldnames(exp.RigInfo);
data = struct2cell(exp.RigInfo);
colnames = {'Value'};
Controller.figInfo.RigInfoInfo = uitable(...
Controller.figInfo.tabs,...
'Data',data,...
'RowName', rownames,...
'ColumnName', colnames, 'ColumnEditable',[true])
end
end
    

end
